<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
	scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
			       当scan为true时，此属性生效。默认的时间间隔为1分钟。
	debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
 -->

<configuration scan="true" scanPeriod="60 seconds" debug="false">    
	<!-- 
		下面一共有2个属性，3个子节点，分别是：
		属性一：设置上下文名称<contextName>
		属性二：设置变量<property> 有两个属性，name和value。可以使“${}”来使用变量。
		子节点一<appender>
		子节点二<root>
		子节点三<loger> 
	-->
	<contextName>logback</contextName>
    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,,,, -->   
    
    
    <property name="log.path" value="D:/ismp/logs/mylog-%d{yyyy-MM-dd}.%i.log" />
    
    
    <!-- 
	    appender用来格式化日志输出节点，有俩个属性name和class，class用来指定哪种输出策略，常用就是控制台输出策略和文件输出策略。
		控制台输出ConsoleAppender
		输出到文件RollingFileAppender
	 --> 
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
    <!-- ThresholdFilter为系统定义的拦截器，例如我们用ThresholdFilter来过滤掉ERROR级别以下的日志不输出到文件中 -->
    	<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
    		<level>DEBUG</level>
    	</filter>    
        <encoder>    
       <!-- 
	        %d{HH: mm:ss.SSS}——日志输出时间
			%thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用
			%-5level——日志级别，并且使用5个字符靠左对齐
			%logger{36}——日志输出者的名字
			%msg——日志消息
			%n——平台的换行符 
			<pattern>%d{HH: mm:ss.SSS} %contextName [%thread] %5level %logger{36} - %msg%n</pattern>
		-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %5level %logger{36} - %msg%n</pattern>  
            <charset>UTF-8</charset>   
        </encoder>    
    </appender>    
    <appender name="file"    
        class="ch.qos.logback.core.rolling.RollingFileAppender">    
        <File>D:/ismp/logs/mylog.txt</File> 
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
    		<level>error</level>
    	</filter>  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">    
        	<!-- 定义了日志的切分方式,把每一天的日志归档到一个文件中 -->
            <fileNamePattern>${log.path}</fileNamePattern>    
            <timeBasedFileNamingAndTriggeringPolicy  class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">    
                <!-- or whenever the file size reaches 64 MB -->    
                <maxFileSize>64 MB</maxFileSize>    
            </timeBasedFileNamingAndTriggeringPolicy>    
        </rollingPolicy>    
        <encoder>    
            <pattern>    
                %date %level [%thread] %logger{36} [%file : %line] %msg%n
            </pattern>    
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->   
        </encoder>    
    </appender>    
    <root level="debug">    
        <appender-ref ref="file" />  
        <appender-ref ref="console" />  
    </root>    
   <!--  <logger name="com.inrich" level="debug">    
          
    </logger>  --> 
</configuration>  